// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 24qDGfvb2rMn6oy8PVF95d
// Component: 8p0TfmEsgq
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_hub_hub.module.css"; // plasmic-import: 24qDGfvb2rMn6oy8PVF95d/projectcss
import * as sty from "./PlasmicSectionLayoutOptions.module.css"; // plasmic-import: 8p0TfmEsgq/css

import Subtract2Icon from "./icons/PlasmicIcon__Subtract2"; // plasmic-import: 1gHwJdG7IiQ/icon
import Subtract3Icon from "./icons/PlasmicIcon__Subtract3"; // plasmic-import: -1jvClmSi3Z/icon
import iconsCheckboxUncheckedBlueSzuyQtsiSz from "./images/iconsCheckboxUncheckedBlue.svg"; // plasmic-import: SZUYQtsiSz/picture
import iconCheckboxCheckedMulticoloredAnIwbkbesZ from "./images/iconCheckboxCheckedMulticolored.svg"; // plasmic-import: anIwbkbesZ/picture
import vectorSliderNobWpnoOiXJpu from "./images/vectorSliderNob.svg"; // plasmic-import: WPNOOi-xJPU/picture
import group258Oq3TM3VMGr from "./images/group258.svg"; // plasmic-import: _oq3tM3vMGr/picture

export type PlasmicSectionLayoutOptions__VariantMembers = {};

export type PlasmicSectionLayoutOptions__VariantsArgs = {};
type VariantPropType = keyof PlasmicSectionLayoutOptions__VariantsArgs;
export const PlasmicSectionLayoutOptions__VariantProps =
  new Array<VariantPropType>();

export type PlasmicSectionLayoutOptions__ArgsType = {};
type ArgPropType = keyof PlasmicSectionLayoutOptions__ArgsType;
export const PlasmicSectionLayoutOptions__ArgProps = new Array<ArgPropType>();

export type PlasmicSectionLayoutOptions__OverridesType = {
  root?: p.Flex<"div">;
  frame187?: p.Flex<"div">;
  group257?: p.Flex<"div">;
  group256?: p.Flex<"div">;
  rectangle1257?: p.Flex<"div">;
  rows?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  group265?: p.Flex<"div">;
  group259?: p.Flex<"div">;
  group261?: p.Flex<"div">;
  group260?: p.Flex<"div">;
  scaleSlider6?: p.Flex<"div">;
  frame188?: p.Flex<"div">;
  hover?: p.Flex<"div">;
  value?: p.Flex<"div">;
  vectorSliderBackgroundFill?: p.Flex<"div">;
  vectorHandle?: p.Flex<"div">;
  vectorNobHandle?: p.Flex<"div">;
  vectorSliderFill?: p.Flex<"div">;
  scaleSlider7?: p.Flex<"div">;
  frame189?: p.Flex<"div">;
  hover2?: p.Flex<"div">;
  value2?: p.Flex<"div">;
  vectorSliderBackgroundFill2?: p.Flex<"div">;
  vectorHandle2?: p.Flex<"div">;
  vectorNobHandle2?: p.Flex<"div">;
  vectorSliderFill2?: p.Flex<"div">;
};

export interface DefaultSectionLayoutOptionsProps {
  className?: string;
}

function PlasmicSectionLayoutOptions__RenderFunc(props: {
  variants: PlasmicSectionLayoutOptions__VariantsArgs;
  args: PlasmicSectionLayoutOptions__ArgsType;
  overrides: PlasmicSectionLayoutOptions__OverridesType;
  dataFetches?: PlasmicSectionLayoutOptions__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"frame187"}
        data-plasmic-override={overrides.frame187}
        className={classNames(defaultcss.all, sty.frame187)}
      >
        <div
          data-plasmic-name={"group257"}
          data-plasmic-override={overrides.group257}
          className={classNames(defaultcss.all, sty.group257)}
        >
          <div
            data-plasmic-name={"group256"}
            data-plasmic-override={overrides.group256}
            className={classNames(defaultcss.all, sty.group256)}
          >
            <div
              data-plasmic-name={"rectangle1257"}
              data-plasmic-override={overrides.rectangle1257}
              className={classNames(defaultcss.all, sty.rectangle1257)}
            />

            <div
              data-plasmic-name={"rows"}
              data-plasmic-override={overrides.rows}
              className={classNames(defaultcss.all, sty.rows)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__ff7U
                )}
              >
                {"Rows"}
              </div>
            </div>

            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(defaultcss.all, sty.columns)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__as8Ni
                )}
              >
                {"Columns"}
              </div>
            </div>

            <div
              data-plasmic-name={"group265"}
              data-plasmic-override={overrides.group265}
              className={classNames(defaultcss.all, sty.group265)}
            >
              <div
                data-plasmic-name={"group259"}
                data-plasmic-override={overrides.group259}
                className={classNames(defaultcss.all, sty.group259)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__p213Q
                  )}
                >
                  {"Text Snippet"}
                </div>

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__zehSf)}
                  role={"img"}
                  src={iconsCheckboxUncheckedBlueSzuyQtsiSz}
                />
              </div>

              <div
                data-plasmic-name={"group261"}
                data-plasmic-override={overrides.group261}
                className={classNames(defaultcss.all, sty.group261)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__myKxJ
                  )}
                >
                  {"Image"}
                </div>

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__i2MiQ)}
                  role={"img"}
                  src={iconCheckboxCheckedMulticoloredAnIwbkbesZ}
                />
              </div>

              <div
                data-plasmic-name={"group260"}
                data-plasmic-override={overrides.group260}
                className={classNames(defaultcss.all, sty.group260)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__qetL
                  )}
                >
                  {"Collapsable"}
                </div>

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__dfLrI)}
                  role={"img"}
                  src={iconsCheckboxUncheckedBlueSzuyQtsiSz}
                />
              </div>
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"scaleSlider6"}
          data-plasmic-override={overrides.scaleSlider6}
          className={classNames(defaultcss.all, sty.scaleSlider6)}
        >
          <div
            data-plasmic-name={"frame188"}
            data-plasmic-override={overrides.frame188}
            className={classNames(defaultcss.all, sty.frame188)}
          >
            <div
              data-plasmic-name={"hover"}
              data-plasmic-override={overrides.hover}
              className={classNames(defaultcss.all, sty.hover)}
            >
              <div
                data-plasmic-name={"value"}
                data-plasmic-override={overrides.value}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.value
                )}
              >
                {"3/6"}
              </div>

              <div
                data-plasmic-name={"vectorSliderBackgroundFill"}
                data-plasmic-override={overrides.vectorSliderBackgroundFill}
                className={classNames(
                  defaultcss.all,
                  sty.vectorSliderBackgroundFill
                )}
              />

              <div
                data-plasmic-name={"vectorHandle"}
                data-plasmic-override={overrides.vectorHandle}
                className={classNames(defaultcss.all, sty.vectorHandle)}
              >
                <div
                  data-plasmic-name={"vectorNobHandle"}
                  data-plasmic-override={overrides.vectorNobHandle}
                  className={classNames(defaultcss.all, sty.vectorNobHandle)}
                >
                  <div
                    data-plasmic-name={"vectorSliderFill"}
                    data-plasmic-override={overrides.vectorSliderFill}
                    className={classNames(defaultcss.all, sty.vectorSliderFill)}
                  />

                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__sf81G)}
                    role={"img"}
                    src={vectorSliderNobWpnoOiXJpu}
                  />
                </div>

                {false ? (
                  <Subtract2Icon
                    className={classNames(defaultcss.all, sty.svg__y8O7Q)}
                    role={"img"}
                  />
                ) : null}
                {false ? (
                  <Subtract3Icon
                    className={classNames(defaultcss.all, sty.svg__i7BFc)}
                    role={"img"}
                  />
                ) : null}
                {false ? (
                  <Subtract3Icon
                    className={classNames(defaultcss.all, sty.svg___1Q9Kb)}
                    role={"img"}
                  />
                ) : null}
                {false ? (
                  <Subtract3Icon
                    className={classNames(defaultcss.all, sty.svg__yJqXu)}
                    role={"img"}
                  />
                ) : null}
              </div>
            </div>

            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__gmPwJ)}
              role={"img"}
              src={group258Oq3TM3VMGr}
            />
          </div>
        </div>

        <div
          data-plasmic-name={"scaleSlider7"}
          data-plasmic-override={overrides.scaleSlider7}
          className={classNames(defaultcss.all, sty.scaleSlider7)}
        >
          <div
            data-plasmic-name={"frame189"}
            data-plasmic-override={overrides.frame189}
            className={classNames(defaultcss.all, sty.frame189)}
          >
            <div
              data-plasmic-name={"hover2"}
              data-plasmic-override={overrides.hover2}
              className={classNames(defaultcss.all, sty.hover2)}
            >
              <div
                data-plasmic-name={"value2"}
                data-plasmic-override={overrides.value2}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.value2
                )}
              >
                {"3/6"}
              </div>

              <div
                data-plasmic-name={"vectorSliderBackgroundFill2"}
                data-plasmic-override={overrides.vectorSliderBackgroundFill2}
                className={classNames(
                  defaultcss.all,
                  sty.vectorSliderBackgroundFill2
                )}
              />

              <div
                data-plasmic-name={"vectorHandle2"}
                data-plasmic-override={overrides.vectorHandle2}
                className={classNames(defaultcss.all, sty.vectorHandle2)}
              >
                <div
                  data-plasmic-name={"vectorNobHandle2"}
                  data-plasmic-override={overrides.vectorNobHandle2}
                  className={classNames(defaultcss.all, sty.vectorNobHandle2)}
                >
                  <div
                    data-plasmic-name={"vectorSliderFill2"}
                    data-plasmic-override={overrides.vectorSliderFill2}
                    className={classNames(
                      defaultcss.all,
                      sty.vectorSliderFill2
                    )}
                  />

                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__v3RwM)}
                    role={"img"}
                    src={vectorSliderNobWpnoOiXJpu}
                  />
                </div>

                {false ? (
                  <Subtract2Icon
                    className={classNames(defaultcss.all, sty.svg__lVwnh)}
                    role={"img"}
                  />
                ) : null}
                {false ? (
                  <Subtract3Icon
                    className={classNames(defaultcss.all, sty.svg___6J6X7)}
                    role={"img"}
                  />
                ) : null}
                {false ? (
                  <Subtract3Icon
                    className={classNames(defaultcss.all, sty.svg__klz4Y)}
                    role={"img"}
                  />
                ) : null}
                {false ? (
                  <Subtract3Icon
                    className={classNames(defaultcss.all, sty.svg___4Nub)}
                    role={"img"}
                  />
                ) : null}
              </div>
            </div>

            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__h1Axq)}
              role={"img"}
              src={group258Oq3TM3VMGr}
            />
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "frame187",
    "group257",
    "group256",
    "rectangle1257",
    "rows",
    "columns",
    "group265",
    "group259",
    "group261",
    "group260",
    "scaleSlider6",
    "frame188",
    "hover",
    "value",
    "vectorSliderBackgroundFill",
    "vectorHandle",
    "vectorNobHandle",
    "vectorSliderFill",
    "scaleSlider7",
    "frame189",
    "hover2",
    "value2",
    "vectorSliderBackgroundFill2",
    "vectorHandle2",
    "vectorNobHandle2",
    "vectorSliderFill2"
  ],
  frame187: [
    "frame187",
    "group257",
    "group256",
    "rectangle1257",
    "rows",
    "columns",
    "group265",
    "group259",
    "group261",
    "group260",
    "scaleSlider6",
    "frame188",
    "hover",
    "value",
    "vectorSliderBackgroundFill",
    "vectorHandle",
    "vectorNobHandle",
    "vectorSliderFill",
    "scaleSlider7",
    "frame189",
    "hover2",
    "value2",
    "vectorSliderBackgroundFill2",
    "vectorHandle2",
    "vectorNobHandle2",
    "vectorSliderFill2"
  ],
  group257: [
    "group257",
    "group256",
    "rectangle1257",
    "rows",
    "columns",
    "group265",
    "group259",
    "group261",
    "group260"
  ],
  group256: [
    "group256",
    "rectangle1257",
    "rows",
    "columns",
    "group265",
    "group259",
    "group261",
    "group260"
  ],
  rectangle1257: ["rectangle1257"],
  rows: ["rows"],
  columns: ["columns"],
  group265: ["group265", "group259", "group261", "group260"],
  group259: ["group259"],
  group261: ["group261"],
  group260: ["group260"],
  scaleSlider6: [
    "scaleSlider6",
    "frame188",
    "hover",
    "value",
    "vectorSliderBackgroundFill",
    "vectorHandle",
    "vectorNobHandle",
    "vectorSliderFill"
  ],
  frame188: [
    "frame188",
    "hover",
    "value",
    "vectorSliderBackgroundFill",
    "vectorHandle",
    "vectorNobHandle",
    "vectorSliderFill"
  ],
  hover: [
    "hover",
    "value",
    "vectorSliderBackgroundFill",
    "vectorHandle",
    "vectorNobHandle",
    "vectorSliderFill"
  ],
  value: ["value"],
  vectorSliderBackgroundFill: ["vectorSliderBackgroundFill"],
  vectorHandle: ["vectorHandle", "vectorNobHandle", "vectorSliderFill"],
  vectorNobHandle: ["vectorNobHandle", "vectorSliderFill"],
  vectorSliderFill: ["vectorSliderFill"],
  scaleSlider7: [
    "scaleSlider7",
    "frame189",
    "hover2",
    "value2",
    "vectorSliderBackgroundFill2",
    "vectorHandle2",
    "vectorNobHandle2",
    "vectorSliderFill2"
  ],
  frame189: [
    "frame189",
    "hover2",
    "value2",
    "vectorSliderBackgroundFill2",
    "vectorHandle2",
    "vectorNobHandle2",
    "vectorSliderFill2"
  ],
  hover2: [
    "hover2",
    "value2",
    "vectorSliderBackgroundFill2",
    "vectorHandle2",
    "vectorNobHandle2",
    "vectorSliderFill2"
  ],
  value2: ["value2"],
  vectorSliderBackgroundFill2: ["vectorSliderBackgroundFill2"],
  vectorHandle2: ["vectorHandle2", "vectorNobHandle2", "vectorSliderFill2"],
  vectorNobHandle2: ["vectorNobHandle2", "vectorSliderFill2"],
  vectorSliderFill2: ["vectorSliderFill2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  frame187: "div";
  group257: "div";
  group256: "div";
  rectangle1257: "div";
  rows: "div";
  columns: "div";
  group265: "div";
  group259: "div";
  group261: "div";
  group260: "div";
  scaleSlider6: "div";
  frame188: "div";
  hover: "div";
  value: "div";
  vectorSliderBackgroundFill: "div";
  vectorHandle: "div";
  vectorNobHandle: "div";
  vectorSliderFill: "div";
  scaleSlider7: "div";
  frame189: "div";
  hover2: "div";
  value2: "div";
  vectorSliderBackgroundFill2: "div";
  vectorHandle2: "div";
  vectorNobHandle2: "div";
  vectorSliderFill2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSectionLayoutOptions__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSectionLayoutOptions__VariantsArgs;
    args?: PlasmicSectionLayoutOptions__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicSectionLayoutOptions__Fetches;
  } & Omit<PlasmicSectionLayoutOptions__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicSectionLayoutOptions__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSectionLayoutOptions__ArgProps,
      internalVariantPropNames: PlasmicSectionLayoutOptions__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicSectionLayoutOptions__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionLayoutOptions";
  } else {
    func.displayName = `PlasmicSectionLayoutOptions.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionLayoutOptions = Object.assign(
  // Top-level PlasmicSectionLayoutOptions renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    frame187: makeNodeComponent("frame187"),
    group257: makeNodeComponent("group257"),
    group256: makeNodeComponent("group256"),
    rectangle1257: makeNodeComponent("rectangle1257"),
    rows: makeNodeComponent("rows"),
    columns: makeNodeComponent("columns"),
    group265: makeNodeComponent("group265"),
    group259: makeNodeComponent("group259"),
    group261: makeNodeComponent("group261"),
    group260: makeNodeComponent("group260"),
    scaleSlider6: makeNodeComponent("scaleSlider6"),
    frame188: makeNodeComponent("frame188"),
    hover: makeNodeComponent("hover"),
    value: makeNodeComponent("value"),
    vectorSliderBackgroundFill: makeNodeComponent("vectorSliderBackgroundFill"),
    vectorHandle: makeNodeComponent("vectorHandle"),
    vectorNobHandle: makeNodeComponent("vectorNobHandle"),
    vectorSliderFill: makeNodeComponent("vectorSliderFill"),
    scaleSlider7: makeNodeComponent("scaleSlider7"),
    frame189: makeNodeComponent("frame189"),
    hover2: makeNodeComponent("hover2"),
    value2: makeNodeComponent("value2"),
    vectorSliderBackgroundFill2: makeNodeComponent(
      "vectorSliderBackgroundFill2"
    ),
    vectorHandle2: makeNodeComponent("vectorHandle2"),
    vectorNobHandle2: makeNodeComponent("vectorNobHandle2"),
    vectorSliderFill2: makeNodeComponent("vectorSliderFill2"),

    // Metadata about props expected for PlasmicSectionLayoutOptions
    internalVariantProps: PlasmicSectionLayoutOptions__VariantProps,
    internalArgProps: PlasmicSectionLayoutOptions__ArgProps
  }
);

export default PlasmicSectionLayoutOptions;
/* prettier-ignore-end */
