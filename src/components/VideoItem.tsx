// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import React, {useEffect} from "react";
import {
    PlasmicVideoItem,
    DefaultVideoItemProps
} from "./plasmic/hub_hub/PlasmicVideoItem";
import {HTMLElementRefOf} from "@plasmicapp/react-web";
import {useMeasure} from "../utilities/useMeasure";

interface VideoItemProps extends DefaultVideoItemProps {
    title: string,
    videoThumbnail: string,
    channel: string,
    itemSizeFactor: number,
    isAwaitingMetadata: boolean,
    setWidth?: (number: number) => void
}

function VideoItem_({
                        title,
                        isAwaitingMetadata,
                        videoThumbnail,
                        setWidth,
                        channel,
                        itemSizeFactor,
                        ...rest
                    }: VideoItemProps, ref: HTMLElementRefOf<"div">) {

 /*   const videoRect = useMeasure(ref, [])
    useEffect(() => {
        //@ts-ignore
        console.log("videoRect from inside", Math.round(videoRect?.width))
        //@ts-ignore
        setWidth(Math.round(videoRect?.width))
    }, [videoRect, setWidth])*/

//style:{width: `calc(${itemSizeFactor}*100%)`}
//render: () => (<p ref={ref} style={{fontSize, maxHeight: "48px"}}>{article.title}</p>
//@ts-ignore
    return <PlasmicVideoItem root={{ref, style:{ fontSize: `calc(${itemSizeFactor}*16px)`} }}
                             image={{src: videoThumbnail}}
                             //videoThumbnailContainer={{style:{height: `calc(${itemSizeFactor}*118px)`}}}

                            /* title={
                                     <div style={{fontSize: `calc(${itemSizeFactor}*0.8rem)`, lineHeight: `calc(${itemSizeFactor}*1.1rem)`, maxHeight: `calc(${itemSizeFactor}*4rem*)`}}>
                                         {title}
                                     </div>
                             }

                             channel={
                                 <div style={{fontSize: `calc(${itemSizeFactor}*0.6rem)`, lineHeight: `calc(${itemSizeFactor}*0.8rem)`, maxHeight: `calc(${itemSizeFactor}*0.8rem*)`}}>
                                     {channel}
                                 </div>
                             }*/


                             {...rest} title={title} channel={channel}  awaitingMetadata={isAwaitingMetadata}
    />
}

const VideoItem = React.forwardRef(VideoItem_);
export default VideoItem;
